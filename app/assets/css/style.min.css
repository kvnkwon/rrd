/*!
 * fastshell
 * Fiercely quick and opinionated front-ends
 * https://HosseinKarami.github.io/fastshell
 * @author Hossein Karami
 * @version 1.0.5
 * Copyright 2018. MIT licensed.
 */
.clear:after,.clear:before{content:" ";display:table}.clear{*zoom:1}.clear:after{clear:both}*{box-sizing:border-box;font-smoothing:antialiased;text-rendering:optimizeLegibility}

/*! normalize.css v4.1.1 | MIT License | github.com/necolas/normalize.css */html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,details,figcaption,figure,footer,header,main,menu,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block}audio:not([controls]){display:none;height:0}progress{vertical-align:baseline}[hidden],template{display:none}a{background-color:transparent;-webkit-text-decoration-skip:objects}a:active,a:hover{outline-width:0}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:inherit;font-weight:bolder}dfn{font-style:italic}h1{font-size:2em;margin:.67em 0}mark{background-color:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}svg:not(:root){overflow:hidden}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}figure{margin:1em 40px}hr{box-sizing:content-box;height:0;overflow:visible}button,input,select,textarea{font:inherit;margin:0}optgroup{font-weight:700}button,input{overflow:visible}button,select{text-transform:none}[type=reset],[type=submit],button,html [type=button]{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-cancel-button,[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-input-placeholder{color:inherit;opacity:.54}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}.hero{background-image:linear-gradient(-180deg,#532bc2,#2d1277);padding-bottom:2em;width:100%}nav{padding-left:0!important;z-index:1}nav .logo{width:180px}@font-face{font-family:proxima-nova;src:url(../fonts/pntopresume.woff)}@font-face{font-family:TexGyre;src:url(../fonts/texgyreadventor.woff)}@font-face{font-family:TexGyre-Bold;src:url(../fonts/texgyreadventor-b.woff)}::selection{background:#333;color:#fff;text-shadow:none}::-moz-selection{background:#333;color:#fff;text-shadow:none}::-webkit-selection{background:#333;color:#fff;text-shadow:none}@media print{*{background:transparent!important;color:#000!important;box-shadow:none!important;text-shadow:none!important}a,a:visited{text-decoration:underline}a[href]:after{content:" (" attr(href) ")"}abbr[title]:after{content:" (" attr(title) ")"}.ir a:after,a[href^="#"]:after,a[href^="javascript:"]:after{content:""}blockquote,pre{border:1px solid #999;page-break-inside:avoid}thead{display:table-header-group}img,tr{page-break-inside:avoid}img{max-width:100%!important}@page{margin:.5cm}h2,h3,p{orphans:3;widows:3}h2,h3{page-break-after:avoid}}h1,h2,h3{font-family:TexGyre-Bold,Helvetica,Arial,serif}.form-control,a,button,h4,h5,label,p{font-family:proxima-nova,Helvetica,Arial,sans-serif}.form-control svg,a svg,button svg,h4 svg,h5 svg,label svg,p svg{transform:translateY(-11%)}.header-content{color:#fff}.card,.card-large{border:1px solid #f6f7fa;box-shadow:0 5px 30px -7px rgba(32,33,36,.15)}.card-large{background-color:#fff;padding:2em!important}.section-label{color:#7a8498;letter-spacing:.1em;font-size:.7rem}.btn,.section-label{text-transform:uppercase}.btn{padding:.5em 1.5em;font-family:proxima-nova,Helvetica,Arial,sans-serif}.btn svg{transform:translateY(-11%)}.btn-primary{background-color:#6682fd;border-color:#6682fd}.btn-danger{background-color:#ee8d49;border-color:#ee8d49}.btn-outline{color:#6682fd;border-color:#6682fd;background-color:transparent}.btn-outline:hover{background-color:#6682fd;color:#fff}.form-control{border-color:#e4e8f0;height:100%;padding:1rem}select.form-control{height:3.5rem}.card-accordion{margin:2em 0;padding-bottom:2em}.card-accordion .card-body{padding:0}.card-accordion .card-title{margin-bottom:0}.card-accordion .card-title img{display:none}.card-accordion .card-title p{margin-bottom:0}.card-accordion form{padding-top:2em;max-width:60%}@media screen and (max-width:835px){.card-accordion{padding:0;margin:1em 0}.card-accordion .card-body{padding:1.25rem .5rem}.card-accordion form{max-width:100%}.card-accordion .card-title img,.card-accordion .card-title p{display:inline-block}.card-accordion .card-title img{float:right}}.container-fluid{width:95%;padding:0}.page-index nav{margin-bottom:5em}.page-index .nav-card{padding:2em 1em;width:100%}.page-report .report-status{margin:2em 0}.page-report .report-status .in-progress,.page-report .report-status .posted{font-weight:700}.page-report .report-status .posted{color:#59d3bb}.page-report .report-status .in-progress{color:#ee8d49}.page-report .reports .table{border:1px solid #e4e8f0;box-shadow:0 5px 30px -7px rgba(32,33,36,.15);margin-bottom:5em}.page-report .reports .table td,.page-report .reports .table th{vertical-align:middle;padding-left:1em;padding-right:1em}.page-report .reports tbody td{padding-top:2em;padding-bottom:2em;border-bottom:1px solid #e4e8f0}.page-report .reports tbody td .reveal-icon{margin:0 .4rem}.page-report .reports tbody .posted{color:#59d3bb}@media screen and (max-width:835px){.page-report .reports{display:none}}.page-report .reports-mobile .in-progress-tabs{margin-top:2.5em}.page-report .reports-mobile .posting-status{float:none}.page-report .reports-mobile .incomplete{fill:#ee8d49}.page-profile{padding-bottom:5em}.page-profile section{margin:2em 0}.page-profile .notifications{margin-top:4em}@media screen and (max-width:835px){.page-profile .notifications{margin-top:0}}.page-profile .card-large{margin-top:2em}@media screen and (max-width:835px){.page-profile .card-large{margin-top:0;border:0;box-shadow:none;padding:0!important}}.page-profile .account-status-notice{max-width:60%}.page-profile .account-status-notice .card{background-color:#edf0f5;border:0;padding-top:1em;padding-bottom:1em;color:#626e86}.page-profile .account-status-notice .card .expiration-date{font-weight:700}@media screen and (max-width:835px){.page-profile .account-status-notice{margin-top:-2.5em;max-width:100%}}.page-profile .signout-control{margin-top:1.5em}@media screen and (max-width:835px){.page-profile .signout-control{text-align:center}.page-profile hr{display:none}}@media screen and (min-width:836px){.page-profile .card{border:0;box-shadow:none}.page-profile .collapse{display:block}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
